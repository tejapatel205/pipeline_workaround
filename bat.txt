PTIONS

-q
--quiet

    This is passed to both underlying git-fetch to squelch reporting of during transfer, and underlying git-merge to squelch output during merging.
-v
--verbose

    Pass --verbose to git-fetch and git-merge.
--[no-]recurse-submodules[=yes|on-demand|no]

    This option controls if new commits of populated submodules should be fetched, and if the working trees of active submodules should be updated, too (see git-fetch[1], git-config[1] and gitmodules[5]).

    If the checkout is done via rebase, local submodule commits are rebased as well.

    If the update is done via merge, the submodule conflicts are resolved and checked out.

Options related to merging

--commit
--no-commit

    Perform the merge and commit the result. This option can be used to override --no-commit. Only useful when merging.

    With --no-commit perform the merge and stop just before creating a merge commit, to give the user a chance to inspect and further tweak the merge result before committing.

    Note that fast-forward updates do not create a merge commit and therefore there is no way to stop those merges with --no-commit. Thus, if you want to ensure your branch is not changed or updated by the merge command, use --no-ff with --no-commit.
